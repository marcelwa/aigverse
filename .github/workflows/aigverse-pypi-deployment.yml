# this file is heavily based on https://github.com/cda-tum/mqt-workflows/blob/main/.github/workflows/reusable-python-packaging.yml

name: üêç ‚Ä¢ Packaging

on:
  release:
    types: [published]
  merge_group:
  push:
    branches: ["main"]
    paths:
      - "bindings/aigverse/**"
      - "**/*.py"
      - "**/*.hpp"
      - "**/*.cpp"
      - "**/*.cmake"
      - "**/CMakeLists.txt"
      - "libs/**"
      - "pyproject.toml"
      - ".github/workflows/aigverse-pypi-deployment.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "bindings/aigverse/**"
      - "**/*.py"
      - "**/*.hpp"
      - "**/*.cpp"
      - "**/*.cmake"
      - "**/CMakeLists.txt"
      - "libs/**"
      - "pyproject.toml"
      - ".github/workflows/aigverse-pypi-deployment.yml"
  workflow_dispatch:

permissions:
  attestations: write
  contents: read
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_sdist:
    name: üì¶ Build Source Distribution
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6

      - name: Build sdist
        run: uv build --sdist

      - name: Check metadata
        run: uvx twine check dist/*

      - name: Upload sdist as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz
          overwrite: true

  build_wheels:
    name: üõû Wheels for ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}

    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, macos-13, macos-14, windows-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up MSVC development environment (Windows only)
        uses: ilammy/msvc-dev-cmd@v1

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: "${{matrix.runs-on}}-aigverse"
          save: true
          max-size: 10G

      - if: runner.os == 'Linux'
        name: Setup mold
        uses: rui314/setup-mold@v1

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23

      - name: Upload wheel as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.runs-on }}-${{ strategy.job-index }}
          path: wheelhouse/*.whl
          overwrite: true

  publish_to_pypi:
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    name: üöÄ Publish to PyPI
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Download the previously stored artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Generate artifact attestation for sdist and wheel(s)
        uses: actions/attest-build-provenance@v2.3.0
        with:
          subject-path: "dist/*"

      - name: Deploy to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_DEPLOY_TOKEN }}
          skip-existing: true
          verbose: true
          attestations: true
