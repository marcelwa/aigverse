[build-system]
requires = [
    "setuptools>=45",
    "setuptools_scm[toml]>=7",
    "ninja>=1.10; sys_platform != 'win32'",
    "cmake>=3.21",
]
build-backend = "setuptools.build_meta"

[project]
name = "aigverse"
version = "0.0.11"
description = "A Python library for working with logic networks, synthesis, and optimization."
readme = "README.md"
authors = [
    { name = "Marcel Walter", email = "marcel.walter@tum.de" }
]
keywords = ["aigverse", "logic", "synthesis", "AIG", "optimization"]
license = { file = "LICENSE" }

classifiers = [
    'Development Status :: 4 - Beta',
    'Programming Language :: Python :: 3',
    'Programming Language :: C++',
    'Environment :: Console',
    'License :: OSI Approved :: MIT License',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: MacOS',
    'Operating System :: POSIX :: Linux',
    'Intended Audience :: Science/Research',
    'Natural Language :: English',
    'Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)',
]

requires-python = ">=3.8"

[project.optional-dependencies]
test = ["pytest>=7.2"]

[project.urls]
Source = 'https://github.com/marcelwa/aigverse'
Tracker = 'https://github.com/marcelwa/aigverse/issues'
#Documentation = 'https://aigverse.readthedocs.io/en/latest/'

[tool.setuptools.packages.find]
include = ["bindings/aigverse.*"]

[tool.setuptools_scm]

[tool.cibuildwheel]
build = "cp3*"
archs = "auto64"
skip = "*-musllinux*"
test-skip = "*-macosx_arm64"
test-command = "python -m unittest discover --start-directory bindings/aigverse/ --verbose"
build-frontend = "pip"
manylinux-x86_64-image = "manylinux_2_28"

[tool.cibuildwheel.macos]
archs = "x86_64"
environment = { MACOSX_DEPLOYMENT_TARGET = "11.0" }

[tool.cibuildwheel.windows]
before-build = "pip install delvewheel"
repair-wheel-command = "delvewheel repair -v -w {dest_dir} {wheel}"


[tool.ruff]
line-length = 120
preview = true
unsafe-fixes = true


[tool.ruff.lint]
extend-select = [
    "A", # flake8-builtins
    "ANN", # flake8-annotations
    "ARG", # flake8-unused-arguments
    "ASYNC", # flake8-async
    "B", "B904", # flake8-bugbear
    "C4", # flake8-comprehensions
    "D",  # pydocstyle
    "EM", # flake8-errmsg
    "EXE", # flake8-executable
    "FA", # flake8-future-annotations
    "FLY", # flynt
    "FURB", # refurb
    "I", # isort
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "LOG", # flake8-logging-format
    "N", # flake8-naming
    "NPY", # numpy
    "PERF", # perflint
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
#    "PL", # pylint
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "PYI", # flake8-pyi
    "Q", # flake8-quotes
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF", # Ruff-specific
#    "S", # flake8-bandit
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID251", # flake8-tidy-imports.banned-api
    "TRY", # tryceratops
    "UP", # pyupgrade
    "YTT", # flake8-2020
]

ignore = [
    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotatio n for `cls` in classmethod
    "ISC001", # Conflicts with formatter
    "PLR09", # Too many <...>
    "PLR2004", # Magic value used in comparison
    "S101", # Use of assert detected
]

[tool.ruff.lint.per-file-ignores]
"bindings/aigverse/test/**" = ["T20", "ANN", "D"]
"docs/**" = ["T20"]
"noxfile.py" = ["T20", "TID251"]
"*.pyi" = ["D418", "PYI021"]  # pydocstyle
"*.ipynb" = [
    "D", # pydocstyle
    "E402", # Allow imports to appear anywhere in Jupyter notebooks
    "I002", # Allow missing `from __future__ import annotations` import
]

[tool.ruff.lint.pydocstyle]
convention = "google"
